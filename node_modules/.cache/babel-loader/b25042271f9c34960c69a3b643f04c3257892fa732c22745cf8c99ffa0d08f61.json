{"ast":null,"code":"var _jsxFileName = \"/Users/user/tenzies_game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Confetti from \"react-confetti\";\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false);\n  const [rolls, setRolls] = useState(0);\n  const [bestRolls, setBestRolls] = useEffect();\n  const [timer, setTimer] = useState(Number(localStorage.getItem('bestRolls')) || Infinity);\n  const [bestTime, setBestTime] = useState(Number(localStorage.getItem('bestTime')) || Infinity);\n  useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld); // Check if all dice are held\n    const allEqual = dice.every(die => die.value === dice[0].value); // Check if all dice have the same value\n    if (allHeld && allEqual) {\n      setTenzies(true);\n      console.log(\"You win!\");\n      // Do something to handle the win condition (e.g. display a message or trigger an animation)\n    }\n  }, [dice]);\n\n  // timer to count time elapsed to play game\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTimer(prevTimer => prevTimer + 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    if (tenzies && timer < bestTime) {\n      localStorage.setItem('bestTime', timer);\n      setBestTime(timer);\n    }\n  }, [tenzies, timer]);\n\n  // helper function to avoid code repetiton\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n    return newDice;\n  }\n\n  // click button to start a new game when die is held create new die. \n  // also setTenzies to false\n  // function newGame() {\n  //   setDice(oldDice => oldDice.map(die => {\n  //     return die.isHeld && generateNewDie()\n  //   }))\n  //   setTenzies(false)\n  // }\n\n  // Clicking the button should generate a new array of numbers\n  // and set the `dice` state to that new array (thus re-rendering\n  // the array to the page)\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ? die : generateNewDie();\n      }));\n      // update roll counter when we roll dice\n      updateRollCounter();\n    } else {\n      setTenzies(false);\n      setDice(allNewDice());\n      setTimer(0);\n    }\n  }\n\n  // Flip the `isHeld` property on the object in the array\n  // that was clicked, based on the `id` prop passed into the function\n  function holdDice(id) {\n    setDice(prevDice => prevDice.map(die => {\n      if (die.id === id) {\n        return {\n          ...die,\n          isHeld: !die.isHeld //flip the propert\n        };\n      } else {\n        return die;\n      }\n    }));\n  }\n  // Track number of rolls\n\n  // Increase rolls counter updating previous state\n  function updateRollCounter() {\n    return setRolls(oldRolls => oldRolls + 1);\n  }\n  // Map over the state numbers array to generate the array\n  // of Die elements and render those in the App component\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {\n        width: \"450px\",\n        height: \"450px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"TENZIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"roll-count\",\n          children: [\"Rolls: \", rolls]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timer\",\n          children: [\"Timer: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-container\",\n        children: diceElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-86\",\n          onClick: rollDice,\n          children: tenzies ? \"New Game\" : \"Roll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Best Time: \", bestTime === Infinity ? 'N/A' : `${bestTime}s`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Best Roll: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aqivFhHkBCgShdVIOqccdFhA2Ek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Confetti","Die","nanoid","jsxDEV","_jsxDEV","App","_s","dice","setDice","allNewDice","tenzies","setTenzies","rolls","setRolls","bestRolls","setBestRolls","timer","setTimer","Number","localStorage","getItem","Infinity","bestTime","setBestTime","allHeld","every","die","isHeld","allEqual","value","console","log","intervalId","setInterval","prevTimer","clearInterval","setItem","generateNewDie","Math","ceil","random","id","newDice","i","push","rollDice","oldDice","map","updateRollCounter","holdDice","prevDice","oldRolls","diceElements","fileName","_jsxFileName","lineNumber","columnNumber","className","children","width","height","onClick","_c","$RefreshReg$"],"sources":["/Users/user/tenzies_game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Confetti from \"react-confetti\"\nimport Die from \"./components/Die\"\nimport { nanoid } from \"nanoid\";\nimport './App.css';\n\nfunction App() {\n\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false)\n  const [rolls, setRolls] = useState(0)\n  const [bestRolls, setBestRolls] = useEffect()\n  const [timer, setTimer] = useState(Number(localStorage.getItem('bestRolls')) || Infinity);\n  const [bestTime, setBestTime] = useState(Number(localStorage.getItem('bestTime')) || Infinity);\n\n  useEffect(() => {\n    const allHeld = dice.every((die) => die.isHeld); // Check if all dice are held\n    const allEqual = dice.every((die) => die.value === dice[0].value); // Check if all dice have the same value\n    if (allHeld && allEqual) {\n      setTenzies(true)\n      console.log(\"You win!\");\n      // Do something to handle the win condition (e.g. display a message or trigger an animation)\n    }\n  }, [dice]);\n\n  // timer to count time elapsed to play game\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTimer((prevTimer) => prevTimer + 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    if (tenzies && timer < bestTime) {\n      localStorage.setItem('bestTime', timer);\n      setBestTime(timer);\n    }\n  }, [tenzies, timer]);\n\n  // helper function to avoid code repetiton\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    }\n  }\n\n  function allNewDice() {\n    const newDice = []\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie())\n    }\n    return newDice\n  }\n\n  // click button to start a new game when die is held create new die. \n  // also setTenzies to false\n  // function newGame() {\n  //   setDice(oldDice => oldDice.map(die => {\n  //     return die.isHeld && generateNewDie()\n  //   }))\n  //   setTenzies(false)\n  // }\n\n  // Clicking the button should generate a new array of numbers\n  // and set the `dice` state to that new array (thus re-rendering\n  // the array to the page)\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ?\n          die :\n          generateNewDie()\n      }));\n      // update roll counter when we roll dice\n      updateRollCounter();\n    } else {\n      setTenzies(false)\n      setDice(allNewDice())\n      setTimer(0)\n    }\n  }\n\n  // Flip the `isHeld` property on the object in the array\n  // that was clicked, based on the `id` prop passed into the function\n  function holdDice(id) {\n    setDice(prevDice => prevDice.map(die => {\n      if (die.id === id) {\n        return {\n          ...die, isHeld: !die.isHeld //flip the propert\n        };\n      } else {\n        return die;\n      }\n    }\n\n    ))\n  }\n  // Track number of rolls\n\n  // Increase rolls counter updating previous state\n  function updateRollCounter() {\n    return setRolls((oldRolls) => oldRolls + 1);\n  }\n  // Map over the state numbers array to generate the array\n  // of Die elements and render those in the App component\n  const diceElements = dice.map(die =>\n    <Die key={die.id} value={die.value} isHeld={die.isHeld} holdDice={() => holdDice(die.id)} />\n  )\n  return (\n    <div className=\"border\">\n      <main>\n        {tenzies && <Confetti width=\"450px\" height=\"450px\" />}\n        <h1 className=\"title\">TENZIES</h1>\n        <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n        <div className=\"stats-container\">\n          <p className=\"roll-count\">Rolls: {rolls}</p>\n          <p className=\"timer\">Timer: {timer}s</p>\n        </div>\n        <div className=\"dice-container\">\n          {diceElements}\n        </div>\n        <div className=\"btn\">\n          <button className=\"button-86\" onClick={rollDice}>\n            {tenzies ? \"New Game\" : \"Roll\"}\n          </button>\n\n        </div>\n        <div className=\"stats-container\">\n          <div>Best Time: {bestTime === Infinity ? 'N/A' : `${bestTime}s`}</div>\n          <p>Best Roll: </p>\n        </div>\n\n      </main>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}