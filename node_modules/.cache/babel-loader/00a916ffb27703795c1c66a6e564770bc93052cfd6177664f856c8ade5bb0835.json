{"ast":null,"code":"var _jsxFileName = \"/Users/user/tenzies_game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Confetti from \"react-confetti\";\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\";\nimport Scorecard from \"./components/Scorecard\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false);\n  const [rolls, setRolls] = useState(0);\n  useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld); // Check if all dice are held\n    const allEqual = dice.every(die => die.value === dice[0].value); // Check if all dice have the same value\n    if (allHeld && allEqual) {\n      setTenzies(true);\n      console.log(\"You win!\");\n      // Do something to handle the win condition (e.g. display a message or trigger an animation)\n    }\n  }, [dice]);\n  // helper function to avoid code repetiton\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n    return newDice;\n  }\n\n  // click button to start a new game when die is held create new die. \n  // also setTenzies to false\n  // function newGame() {\n  //   setDice(oldDice => oldDice.map(die => {\n  //     return die.isHeld && generateNewDie()\n  //   }))\n  //   setTenzies(false)\n  // }\n\n  // Clicking the button should generate a new array of numbers\n  // and set the `dice` state to that new array (thus re-rendering\n  // the array to the page)\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ? die : generateNewDie();\n      }));\n    } else {\n      setTenzies(false);\n      setDice(allNewDice());\n    }\n  }\n\n  // Flip the `isHeld` property on the object in the array\n  // that was clicked, based on the `id` prop passed into the function\n  function holdDice(id) {\n    setDice(prevDice => prevDice.map(die => {\n      if (die.id === id) {\n        return {\n          ...die,\n          isHeld: !die.isHeld //flip the propert\n        };\n      } else {\n        return die;\n      }\n    }));\n  }\n  // Track number of rolls\n\n  // Increase rolls counter updating previous state\n  function updateRollCounter() {\n    return setRolls(oldRolls => oldRolls + 1);\n  }\n  // Map over the state numbers array to generate the array\n  // of Die elements and render those in the App component\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {\n        width: \"450px\",\n        height: \"450px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Tenzies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rolls: \", rolls]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-container\",\n        children: diceElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-86\",\n          onClick: rollDice,\n          children: tenzies ? \"New Game\" : \"Roll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scorecard, {\n        rollCount: updateRollCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s6JfMEwvOcmSlP6LhAHyTIWU/DQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Confetti","Die","nanoid","Scorecard","jsxDEV","_jsxDEV","App","_s","dice","setDice","allNewDice","tenzies","setTenzies","rolls","setRolls","allHeld","every","die","isHeld","allEqual","value","console","log","generateNewDie","Math","ceil","random","id","newDice","i","push","rollDice","oldDice","map","holdDice","prevDice","updateRollCounter","oldRolls","diceElements","fileName","_jsxFileName","lineNumber","columnNumber","className","children","width","height","onClick","rollCount","_c","$RefreshReg$"],"sources":["/Users/user/tenzies_game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Confetti from \"react-confetti\"\nimport Die from \"./components/Die\"\nimport { nanoid } from \"nanoid\";\nimport Scorecard from \"./components/Scorecard\";\nimport './App.css';\n\nfunction App() {\n\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false)\n  const [rolls, setRolls] = useState(0)\n\n  useEffect(() => {\n    const allHeld = dice.every((die) => die.isHeld); // Check if all dice are held\n    const allEqual = dice.every((die) => die.value === dice[0].value); // Check if all dice have the same value\n    if (allHeld && allEqual) {\n      setTenzies(true)\n      console.log(\"You win!\");\n      // Do something to handle the win condition (e.g. display a message or trigger an animation)\n    }\n  }, [dice]);\n  // helper function to avoid code repetiton\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    }\n  }\n\n  function allNewDice() {\n    const newDice = []\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie())\n    }\n    return newDice\n  }\n\n  // click button to start a new game when die is held create new die. \n  // also setTenzies to false\n  // function newGame() {\n  //   setDice(oldDice => oldDice.map(die => {\n  //     return die.isHeld && generateNewDie()\n  //   }))\n  //   setTenzies(false)\n  // }\n\n  // Clicking the button should generate a new array of numbers\n  // and set the `dice` state to that new array (thus re-rendering\n  // the array to the page)\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ?\n          die :\n          generateNewDie()\n      }))\n    } else {\n      setTenzies(false)\n      setDice(allNewDice())\n    }\n  }\n\n  // Flip the `isHeld` property on the object in the array\n  // that was clicked, based on the `id` prop passed into the function\n  function holdDice(id) {\n    setDice(prevDice => prevDice.map(die => {\n      if (die.id === id) {\n        return {\n          ...die, isHeld: !die.isHeld //flip the propert\n        };\n      } else {\n        return die;\n      }\n    }\n\n    ))\n  }\n  // Track number of rolls\n\n  // Increase rolls counter updating previous state\n  function updateRollCounter() {\n    return setRolls((oldRolls) => oldRolls + 1);\n  }\n  // Map over the state numbers array to generate the array\n  // of Die elements and render those in the App component\n  const diceElements = dice.map(die =>\n    <Die key={die.id} value={die.value} isHeld={die.isHeld} holdDice={() => holdDice(die.id)} />\n  )\n  return (\n    <div className=\"border\">\n      <main>\n        {tenzies && <Confetti width=\"450px\" height=\"450px\" />}\n        <h1 className=\"title\">Tenzies</h1>\n        <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n        <p>Rolls: {rolls}</p>\n        <div className=\"dice-container\">\n          {diceElements}\n        </div>\n        <div className=\"btn\">\n          <button className=\"button-86\" onClick={rollDice}>\n            {tenzies ? \"New Game\" : \"Roll\"}\n          </button>\n        </div>\n        <Scorecard rollCount={updateRollCounter} />\n      </main>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}